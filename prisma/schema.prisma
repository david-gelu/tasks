generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id       String    @id @default(auto()) @map("_id") @db.ObjectId
  email    String    @unique
  username String    @unique
  password String?
  name     String?
  todos    Todo[]
  accounts Account[]
  sessions Session[]
}

model Todo {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  description String?
  date        String
  isCompleted Boolean   @default(false)
  isImportant Boolean   @default(false)
  updatedAt   DateTime? @default(now()) @updatedAt @map("updated_at")
  createdAt   DateTime  @default(now()) @map("created_at")
  userId      String    @db.ObjectId
  user        User      @relation(fields: [userId], references: [id])
}
